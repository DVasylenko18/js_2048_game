{"version":3,"sources":["scripts/main.js"],"names":["page","document","documentElement","cells","querySelectorAll","button","message","score","getElementsByClassName","newGameBoard","gameBoard","Array","fill","gameScore","gameWin","gameEnd","movement","move","direction","goUp","goDown","goRight","goLeft","classList","remove","removeEventListener","addCell","addTag","innerHTML","chunkSize","i","length","chunk","slice","filter","elem","j","splice","concat","forEach","push","arraysEqual","k","reverse","tempGameBoard","sampleRange","range","n","sample","Math","random","getRandom","num","gameReset","add","addCells","pos","map","index","undefined","a","b","className","addEventListener","e","key"],"mappings":"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","file":"main.069e94ce.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write your code here\n\nconst page = document.documentElement;\nconst cells = page.querySelectorAll('.field-cell');\nconst button = page.querySelectorAll('.button');\nconst message = page.querySelectorAll('.message');\nconst score = page.getElementsByClassName('game-score')[0];\n\nconst newGameBoard = [];\nconst gameBoard = Array(16).fill(0);\nlet gameScore = 0;\nlet gameWin = false;\nlet gameEnd = false;\nlet movement = false;\n\nbutton[0].addEventListener('click', () => {\n  if (button[0].innerHTML === 'Start') {\n    button[0].innerHTML = 'Restart';\n    button[0].className = 'button restart';\n\n    message.forEach(elem => {\n      elem.classList.add('hidden');\n    });\n  } else {\n    gameEnd = false;\n    gameReset();\n  }\n\n  addCells();\n  addTag();\n\n  document.addEventListener('keydown', e => {\n    move(e.key);\n  });\n});\n\nfunction move(direction) {\n  switch (direction) {\n    case 'ArrowUp':\n      goUp();\n      break;\n    case 'ArrowDown':\n      goDown();\n      break;\n    case 'ArrowRight':\n      goRight();\n      break;\n    case 'ArrowLeft':\n      goLeft();\n      break;\n  }\n\n  if (gameEnd) {\n    message[0].classList.remove('hidden');\n    document.removeEventListener('keydown');\n\n    return;\n  }\n\n  if (gameWin) {\n    message[1].classList.remove('hidden');\n    document.removeEventListener('keydown');\n\n    return;\n  }\n\n  if (movement) {\n    addCell();\n    addTag();\n    score.innerHTML = gameScore;\n    movement = false;\n  }\n}\n\nfunction goLeft() {\n  const chunkSize = 4;\n\n  for (let i = 0; i < gameBoard.length; i += chunkSize) {\n    const chunk = gameBoard.slice(i, i + chunkSize).filter(elem => elem !== 0);\n\n    for (let j = 0; j < chunk.length - 1; j++) {\n      if (chunk[j] === chunk[j + 1]) {\n        chunk[j] = chunk[j] * 2;\n        chunk.splice(j + 1, 1);\n        gameScore += chunk[j];\n        j += 1;\n\n        if (chunk[j] === 2048) {\n          gameWin = true;\n        }\n      }\n    }\n\n    chunk.concat(Array(4 - chunk.length).fill(0)).forEach(elem => {\n      newGameBoard.push(elem);\n    });\n  }\n\n  if (!arraysEqual(gameBoard, newGameBoard)) {\n    gameBoard.forEach((elem, k) => {\n      gameBoard[k] = newGameBoard[k];\n    });\n    movement = true;\n  } else if (arraysEqual(gameBoard, newGameBoard)\n    && newGameBoard.filter(elem => elem > 0).length === newGameBoard.length) {\n    gameEnd = true;\n  }\n\n  newGameBoard.length = 0;\n}\n\nfunction goRight() {\n  reverse();\n  reverse();\n  goLeft();\n  reverse();\n  reverse();\n}\n\nfunction goDown() {\n  reverse();\n  goLeft();\n  reverse();\n  reverse();\n  reverse();\n}\n\nfunction goUp() {\n  reverse();\n  reverse();\n  reverse();\n  goLeft();\n  reverse();\n}\n\nfunction reverse() {\n  const tempGameBoard = Array(16).fill(0);\n  let k = 0;\n\n  for (let i = 3; i > -1; i--) {\n    for (let j = 0; j < 4; j++) {\n      tempGameBoard[j + k * 4] = gameBoard[15 - i - j * 4];\n    }\n    k += 1;\n  }\n\n  gameBoard.forEach((elem, i) => {\n    gameBoard[i] = tempGameBoard[i];\n  });\n}\n\nfunction sampleRange(range, n) {\n  const sample = [];\n\n  for (let i = 0; i < n; i++) {\n    sample.push(range.splice(Math.random() * range.length, 1));\n  }\n\n  return sample;\n}\n\nfunction getRandom() {\n  const num = Math.random();\n\n  if (num < 0.9) {\n    return 2;\n  } else {\n    return 4;\n  }\n}\n\nfunction gameReset() {\n  gameBoard.forEach((elem, i) => {\n    gameBoard[i] = 0;\n  });\n  gameScore = 0;\n  score.innerHTML = gameScore;\n\n  message.forEach(elem => {\n    elem.classList.add('hidden');\n  });\n}\n\nfunction addCells() {\n  let range = [];\n\n  range = gameBoard.map((elem, index) => {\n    if (elem === 0) {\n      return index;\n    }\n  });\n\n  range = range.filter(elem => elem !== undefined);\n\n  const pos = sampleRange(range, 2);\n\n  gameBoard[pos[0]] = getRandom();\n  gameBoard[pos[1]] = getRandom();\n}\n\nfunction arraysEqual(a, b) {\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction addCell() {\n  let range = [];\n\n  range = gameBoard.map((elem, index) => {\n    if (elem === 0) {\n      return index;\n    }\n  });\n\n  range = range.filter(elem => elem !== undefined);\n\n  if (range.length < 1) {\n    gameEnd = true;\n  } else {\n    const pos = sampleRange(range, 1);\n\n    gameBoard[pos[0]] = getRandom();\n  }\n}\n\nfunction addTag() {\n  gameBoard.forEach((elem, i) => {\n    if (elem === 0) {\n      cells[i].className = 'field-cell';\n      cells[i].innerHTML = '';\n    } else {\n      cells[i].className = 'field-cell field-cell--' + elem;\n      cells[i].innerHTML = elem;\n    }\n  });\n}\n"]}